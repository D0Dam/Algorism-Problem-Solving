#include<iostream>
using namespace std;
int check_right();
int check_up();
int swap_down(int i, int j);
int swap_right(int i, int j);

char **arr;
int N;
int max_value = 0;

int main()
{
    cin >> N;
    arr = new char*[N];
    for(int i = 0; i < N; i++)
        arr[i] = new char[N];
    for(int i = 0; i < N; i++)
    {
        for(int j = 0; j < N; j++)
        {
            cin >> arr[i][j];
        }
    }
    for(int i = 0; i < N; i++)
    {
        for(int j = 0; j < N; j++)
        {  
            if(i < N - 1)
            {
                int a;
                a = swap_down(i, j);
                if(max_value < a)
                {
                    max_value = a;
                }
                a = swap_down(i, j);
                if(j < N -1)
                {
                    a = swap_right(i, j);
                    if(max_value < a)
                    {
                        max_value = a;
                    }
                    a = swap_right(i, j);
                }

            }
        }
    }

    cout << max_value << endl;

    for(int i = 0; i < N; ++i)
    { 
        delete [] arr[i];
    }
     delete [] arr;

    return 0;
}

int swap_down(int i, int j)
{
    char val;
    int cr, cu;
    val = arr[i][j];
    arr[i][j] = arr[i + 1][j];
    arr[i + 1][j]= val;
    cr = check_right();
    cu = check_up();

    if(cr > cu)
        return cr;
    else
        return cu;
}

int swap_right(int i, int j)
{
    char val;
    int cr, cu;
    val = arr[i][j];
    arr[i][j] = arr[i][j + 1];
    arr[i][j + 1]= val;
    
    cr = check_right();
    cu = check_up();
    
    if(cr > cu)
        return cr;
    else
        return cu;
}

int check_right()
{
    int count = 0, max = 0;
    for(int i = 0; i < N; i++)
    {
        count = 1;
        for(int j = 0; j < N - 1; j++)
        {
            if(arr[i][j]==arr[i][j+1])
            {
                count++;
            }
            else
            {
                count=1;
            }
            if(max<count)
            {
                max = count;
            }
        }
    }
    return max;
}

int check_up()
{
    int count = 0, max = 0;
    for(int j = 0; j < N; j++)
    {
        count = 1;
        for(int i = 0; i < N - 1; i++)
        {
            if(arr[i][j]==arr[i + 1][j])
            {
                count++;
            }
            else
            {
                count=1;
            }
            if(max<count)
            {
                max = count;
            }
        }
    }
    return max;
}
